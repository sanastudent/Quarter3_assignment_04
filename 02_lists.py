# -*- coding: utf-8 -*-
"""02_lists.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fiYRUFIyvrUCB_DhSARANn-RaEWaRcST
"""

MAX_LENGTH = 3  # Maximum length for the shorten function

# 01. Sum of numbers
def sum_of_number(numbers):
    total = sum(numbers)  # sum() built-in function hai jo numbers ko add karke uska sum dega
    return total

# 02. Doubling each element
def doubled_element(numbers):
    doubled_list = [number * 2 for number in numbers]  # List comprehension se double kar rahe hain
    return doubled_list

# 03. Add three copies of data to the list
def add_three_copies(my_list, data):
    for i in range(3):
        my_list.append(data)  # Append kar rahe hain list ke end par

# 04. Get the first element of a list
def get_lst_element(lst):
    print(lst[0])

def get_lst():
    lst = []
    element = input("Please enter an element of the list or press enter to stop: ")
    while element != "":
        lst.append(element)
        element = input("Please enter an element of the list or press enter to stop: ")
    return lst

# 05. Get the last element of a list
def get_last_element(lst):
    if len(lst) > 0:
        print(lst[-1])
    else:
        print("The list is empty.")

def get_last():
    lst = []
    element = input("Please enter an element of the list or press enter to stop: ")
    while element != "":
        lst.append(element)
        element = input("Please enter an element of the list or press enter to stop: ")
    return lst

# 06. Continuously ask for input and print the list when user presses enter without typing anything
def get_user_input():
    lst = []
    while True:
        elem = input("Please enter a value (press enter to stop): ")
        if elem == "":
            break
        lst.append(elem)
    print("The list is:", lst)

# 07. Shorten the list to a maximum length of MAX_LENGTH
def shorten(lst):
    while len(lst) > MAX_LENGTH:
        last_elem = lst.pop()
        print(f"Removed: {last_elem}")

# Main function to call all tasks one by one
def main():
    # 1. Sum of numbers example
    number_of_list = [2, 3, 4, 5, 6]  # List of numbers
    result = sum_of_number(number_of_list)  # Sum calculate karenge
    print(f"Sum of all the numbers is: {result}")  # Output sum

    # 2. Doubling elements example
    number_list = [1, 3, 5, 7]  # List of numbers to double
    final_result = doubled_element(number_list)  # Double karenge
    print(f"Doubled elements: {final_result}")  # Output doubled list

    # 3. Add three copies to list example
    message = input("Enter a message to copy: ")
    my_list = []  # Empty list
    print("List before:", my_list)  # Before adding copies
    add_three_copies(my_list, message)  # Add 3 copies of message
    print("List after:", my_list)  # After adding copies

    # 4. Get the first element of a list
    lst = get_lst()
    get_lst_element(lst)

    # 5. Get the last element of a list
    lst = get_last()
    get_last_element(lst)

    # 6. Continuously ask for input and print the list
    get_user_input()

    # 7. Shorten the list to a maximum length
    lst = get_lst()
    shorten(lst)

if __name__ == "__main__":
    main()  # Call main function