# -*- coding: utf-8 -*-
"""05_control_flow.pynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ec0aSaWqtalaopytkVL1vrC8O0vrn3T1
"""

# 01
# Guess My Number
#
# I am thinking of a number between 0 and 99... Enter a guess: 50 Your guess is too high
#
# Enter a new number: 25 Your guess is too low
#
# Enter a new number: 40 Your guess is too low
#
# Enter a new number: 45 Your guess is too low
#
# Enter a new number: 48 Congrats! The number was: 48


import random
MAX_TERM_VALUE : int = 10000
AFFIRMATION :str = "I am capable of doing anything I put my mind to."



def main():
    # Generate the secret number at random!
    secret_number = random.randint(1, 99)

    print("I am thinking of a number between 1 and 99...")

    # Get user's guess
    guess = int(input("Enter a guess: "))
    # True if guess is not equal to secret number
    while guess != secret_number:
        if guess < secret_number:  # If-statement is True if guess is less than secret number
            print("Your guess is too low")
        else:
            print("Your guess is too high")

        print() # Print an empty line to tidy up the console for new guesses
        guess = int(input("Enter a new guess: "))  # Get a new guess from the user

    print("Congrats! The number was: " + str(secret_number))



# 02

    # Write a program to print terms in the Fibonacci sequence up to a maximum value.
    # Write a program that displays the terms in the Fibonacci sequence, starting with Fib(0) and continuing as
    #  long as the terms are less than 10,000 (you should store this value as a constant!).


def main_two():
    curr_term = 0  # The 0th Fibonacci Number
    next_term = 1  # The 1st Fibonacci Number
    while curr_term <= MAX_TERM_VALUE:
        print(curr_term)
        term_after_next = curr_term + next_term
        curr_term = next_term
        next_term = term_after_next


# 03
# Write a program which prompts the user to type an affirmation of your choice(we'll use "I am capable of doing anything i put my mind to.")
# until they type it correctly.Sometimes, esecially in the midst of such certain times, we just need to be reminded that we are resilent,
# capable and strong; tis little Python programs may be able to help!


def main_three():
      print("Please type the following affirmation: " + AFFIRMATION)

      user_feedback = input()  # Get user's input
      attempts = 0  # Initialize attempt counter
      max_attempts = 5  # Set the maximum number of attempts

      while user_feedback != AFFIRMATION:  # While the user's input isn't the affirmation
        attempts += 1  # Increment attempts
        if attempts >= max_attempts:
            print("Sorry, you've reached the maximum attempts.")
            break  # Exit the loop if max attempts are reached
        print("That was not the affirmation.")
        print("Please type the following affirmation: " + AFFIRMATION)
        user_feedback = input()

      if user_feedback == AFFIRMATION:
        print("That's right! :)")



 # Write a program that prints out the calls for a spaceship that is about to launch. Countdown from 10 to 1 and then output Liftoff!
def main_four():

 for i in range(10,0,-1):
     print(i,end =" ")

print("Liftoff")

# Write a program that asks a user to enter a number. Your program will then double that number and print out the result.
# It will repeat that process until the value is 100 or greater.

def main_five():
    number = int(input("Please enter a number:"))

    while number < 100:
        number *= 2
        print(f"The number is now: {number}")

    print(f"The number is now 100 or greater.")



if __name__ == '__main__':
    main()
    main_two()
    main_three()
    main_four()
    main_five()